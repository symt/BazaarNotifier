buildscript {
    repositories {
        mavenCentral()
        maven {
           name 'JitPack'
            url 'https://jitpack.io'
        }
        maven { url = "https://maven.minecraftforge.net/" }
        maven { url = "https://repo.spongepowered.org/maven" }
    }
    dependencies {
        classpath 'com.github.asbyth:ForgeGradle:6f53277'
    }
}
apply plugin: 'java'
apply plugin: "net.minecraftforge.gradle.forge"

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}
version = "1.5.0-beta13"
group = "dev.meyi.bn"
archivesBaseName = "BazaarNotifier"


minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
}

def resourcesFile = "${sourceSets.main.resources.srcDirs[0]}/resources.json"

task destroyResources {
    doLast {
        if (new File(resourcesFile).exists()) {
            project.delete(files("${sourceSets.main.resources.srcDirs[0]}/resources.json"))
        }
    }
}

task retrieveResources {
    doLast {
        def f = new File(resourcesFile)

        if (f.exists()) {
            project.delete(files("${sourceSets.main.resources.srcDirs[0]}/resources.json"))
        }
        new URL("https://raw.githubusercontent.com/symt/BazaarNotifier/resources/resources.json")
                .withInputStream {i -> f.withOutputStream {it << i}}
    }
}

jar {
    manifest {
        attributes 'FMLAT': 'BazaarNotifier_at.cfg'
    }
}

processResources
        {
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
            rename '(.+_at.cfg)', 'META-INF/$1'
        }
processResources.dependsOn retrieveResources
processResources.finalizedBy destroyResources

processResources.outputs.upToDateWhen { false }

tasks.destroyResources.outputs.upToDateWhen { false }
